
//== PROGRAM LINK STATUS = TRUE
//== PROGRAM VALIDATE STATUS = TRUE
/*== INFO LOG ==
Vertex shader(s) linked, fragment shader(s) linked.
  == INFO LOG END ==*/

//======================================================
//   Vertex Shader 2 
//======================================================

//== SHADER COMPILE STATUS = TRUE
/*== INFO LOG ==
Vertex shader was successfully compiled to run on hardware.
  == INFO LOG END ==*/
#version 120
#define lowp   
#define mediump
#define highp  
attribute vec4 vertex;
attribute vec3 normal;

uniform mat4 mvp; // model-view-projection matrix
uniform mat3 norm; // normal matrix

varying vec3 n;

void main(void) {
	// compute position
	gl_Position = mvp * vertex;

	// compute light info
	n = normalize(norm * normal);
}
//======================================================
//   Fragment Shader 3
//======================================================

//== SHADER COMPILE STATUS = TRUE
/*== INFO LOG ==
Fragment shader was successfully compiled to run on hardware.
  == INFO LOG END ==*/
#version 120
#define lowp   
#define mediump
#define highp  
varying vec3 n;

void main(void)
{
    vec3 eyeSpaceLigthDirection = vec3(0.0,0.0,1.0);
	float diffuse = max(0.0,dot(normalize(n),eyeSpaceLigthDirection));
	gl_FragColor = vec4(vec3(1, 0, 0)*diffuse,1.0);
	//gl_FragColor = vec4(1, 1, 1, 1);
}